if(WIN32)
    add_definitions(-DUNICODE -D_UNICODE)
endif()

message("目标文件系统类型:${CMAKE_SYSTEM_NAME}")
if(CMAKE_SYSTEM_NAME STREQUAL Android)
    unset(ANDROID_PLATFORM)
    set(CMAKE_SHARED_LIBRARY_SUFFIX "_${ANDROID_ABI}.so")
elseif(CMAKE_SYSTEM_NAME STREQUAL Windows)
    add_definitions(-DWIN32)
    if(MSVC)
        add_definitions(-DUNICODE -D_UNICODE)
        add_definitions(-D_CRT_SECURE_NO_WARNINGS)
    endif()
endif()

message("编译器:${CMAKE_CXX_COMPILER_ID}")
if(${CMAKE_CXX_COMPILER_ID} MATCHES Clang OR ${CMAKE_CXX_COMPILER_ID} MATCHES GNU)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations -Wno-inconsistent-missing-override -Wno-nonportable-include-path")

elseif(${CMAKE_CXX_COMPILER_ID} MATCHES MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP /Ob2")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS,5.1")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /MANIFEST:NO")
    set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /MANIFEST:NO")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /MANIFEST:NO")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2 /Zi /nologo /EHsc /GS /WX- /Zc:forScope")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
endif()